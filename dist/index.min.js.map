{
  "version": 3,
  "sources": ["selectOption.js", "index.js"],
  "sourcesContent": ["export class SelectOption {\n    constructor(value, label, disabled, selected) {\n        this.value = value;\n        this.label = label;\n        this.disabled = disabled;\n        this.selected = selected;\n    }\n    static fromObject(option) {\n        var _a, _b;\n        return new SelectOption(option.value, option.label, (_a = option.disabled) !== null && _a !== void 0 ? _a : false, (_b = option.selected) !== null && _b !== void 0 ? _b : false);\n    }\n    static fromOption(option) {\n        return new SelectOption(option.value, option.innerText, option.disabled, option.selected);\n    }\n}\n", "import { SelectOption } from \"./selectOption\";\nclass SelectChangeEvent extends CustomEvent {\n    constructor(detail) {\n        super(\"change\", {\n            detail,\n            bubbles: true,\n            cancelable: true,\n        });\n    }\n}\nexport class Select {\n    constructor(selector, options = [], config = {}) {\n        this.shadowInput = null;\n        this.options = [];\n        this.isOpen = false;\n        this.initNode(selector);\n        this.options =\n            options.length === 0 && this.shadowInput !== null\n                ? Array.from(this.shadowInput.querySelectorAll(\"option\")).map((node) => SelectOption.fromOption(node))\n                : options.map((option) => SelectOption.fromObject(option));\n        this.config = Object.assign({ placeholder: \"Select option\", searchable: false, clearable: false }, config);\n        this.init();\n    }\n    init() {\n        this.initSelectButton();\n        this.initDropdown();\n        this.initSearchInput();\n        this.renderOptions();\n        this.outsideClickHandler = this.handleOutsideClick.bind(this);\n        document.addEventListener(\"click\", this.outsideClickHandler);\n    }\n    initNode(selector) {\n        if (typeof selector === \"string\") {\n            const target = document.querySelector(selector);\n            if (target === null) {\n                throw new Error(`Element with selector \"${selector}\" not found`);\n            }\n            if (!(target instanceof HTMLDivElement) &&\n                !(target instanceof HTMLSelectElement)) {\n                throw new Error(\"Only HTMLDivElement and HTMLSelectElement are supported.\");\n            }\n            selector = target;\n        }\n        let node = null;\n        if (selector instanceof HTMLSelectElement) {\n            node = document.createElement(\"div\");\n            if (selector.parentElement === null) {\n                throw new Error(\"Shadow input must have a parent element\");\n            }\n            else {\n                selector.parentElement.insertBefore(node, selector);\n            }\n            this.shadowInput = selector;\n            this.shadowInput.classList.add(\"lobster-select__shadow-node\");\n            node.classList.add(\"has-shadow-node\");\n        }\n        else {\n            node = selector;\n        }\n        if (node.classList.contains(\"lobster-select\")) {\n            throw new Error(`Element with selector \"${selector}\" already initialized`);\n        }\n        this.node = node;\n        this.node.classList.add(\"lobster-select\");\n    }\n    initDropdown() {\n        this.dropdown = document.createElement(\"div\");\n        this.dropdown.classList.add(\"lobster-select__dropdown\");\n        this.node.appendChild(this.dropdown);\n    }\n    initSelectButton() {\n        this.selectButton = document.createElement(\"div\");\n        this.selectButton.classList.add(\"lobster-select__button\");\n        this.buttonText = document.createElement(\"span\");\n        this.buttonText.classList.add(\"lobster-select__button-text\");\n        this.buttonText.textContent = this.config.placeholder;\n        const buttonArrow = document.createElement(\"span\");\n        buttonArrow.classList.add(\"lobster-select__button-arrow\");\n        if (this.config.clearable) {\n            const clearButton = document.createElement(\"span\");\n            clearButton.classList.add(\"lobster-select__clear-button\");\n            clearButton.addEventListener(\"click\", (e) => {\n                e.stopPropagation();\n                this.clear();\n                const event = new SelectChangeEvent({\n                    value: \"\",\n                    label: \"\",\n                });\n                this.node.dispatchEvent(event);\n            });\n            this.selectButton.appendChild(clearButton);\n            this.node.classList.add(\"lobster-select--clearable\");\n        }\n        this.selectButton.appendChild(this.buttonText);\n        this.selectButton.appendChild(buttonArrow);\n        this.node.appendChild(this.selectButton);\n        this.selectButton.addEventListener(\"click\", () => this.toggle());\n    }\n    initSearchInput() {\n        if (!this.config.searchable) {\n            return;\n        }\n        const searchWrapper = document.createElement(\"div\");\n        searchWrapper.classList.add(\"lobster-select__search\");\n        this.searchInput = document.createElement(\"input\");\n        this.searchInput.type = \"text\";\n        this.searchInput.placeholder = \"Search...\";\n        this.searchInput.classList.add(\"lobster-select__search-input\");\n        searchWrapper.appendChild(this.searchInput);\n        this.dropdown.appendChild(searchWrapper);\n        this.searchInput.addEventListener(\"input\", () => this.handleSearch());\n    }\n    renderOptions() {\n        const optionsList = document.createElement(\"div\");\n        optionsList.classList.add(\"lobster-select__options\");\n        this.options.forEach((option) => {\n            const optionElement = document.createElement(\"div\");\n            optionElement.classList.add(\"lobster-select__option\");\n            if (option.disabled) {\n                optionElement.classList.add(\"lobster-select__option--disabled\");\n            }\n            else {\n                optionElement.addEventListener(\"click\", () => this.selectOption(option));\n            }\n            if (option.selected) {\n                optionElement.classList.add(\"lobster-select__option--selected\");\n                if (this.selectedOption === undefined) {\n                    this.selectedOption = option;\n                    this.setButtonText(option.label);\n                }\n                else {\n                    throw new Error(\"Select can't contain more than one chosen option\");\n                }\n            }\n            optionElement.textContent = option.label;\n            optionsList.appendChild(optionElement);\n        });\n        const existingOptions = this.dropdown.querySelector(\".lobster-select__options\");\n        if (existingOptions) {\n            this.dropdown.removeChild(existingOptions);\n        }\n        this.dropdown.appendChild(optionsList);\n    }\n    handleSearch() {\n        if (!this.searchInput)\n            return;\n        const searchTerm = this.searchInput.value.toLowerCase();\n        const filteredOptions = this.options.filter((option) => option.label.toLowerCase().includes(searchTerm));\n        const optionsList = this.dropdown.querySelector(\".lobster-select__options\");\n        if (optionsList) {\n            optionsList.innerHTML = \"\";\n            filteredOptions.forEach((option) => {\n                const optionElement = document.createElement(\"div\");\n                optionElement.classList.add(\"lobster-select__option\");\n                if (option.disabled) {\n                    optionElement.classList.add(\"lobster-select__option--disabled\");\n                }\n                optionElement.textContent = option.label;\n                if (!option.disabled) {\n                    optionElement.addEventListener(\"click\", () => this.selectOption(option));\n                }\n                optionsList.appendChild(optionElement);\n            });\n        }\n    }\n    selectOption(option) {\n        this.selectedOption = option;\n        this.setButtonText(option.label);\n        this.node.classList.add(\"has-value\");\n        this.dropdown\n            .querySelectorAll(\".lobster-select__option\")\n            .forEach((optionEl, index) => {\n            const isChosen = this.options[index].value === option.value;\n            optionEl.classList.toggle(\"lobster-select__option--selected\", isChosen);\n        });\n        this.close();\n        if (this.shadowInput !== null) {\n            this.shadowInput.value = option.value;\n        }\n        const event = new SelectChangeEvent({\n            value: option.value,\n            label: option.label,\n        });\n        this.node.dispatchEvent(event);\n    }\n    toggle() {\n        this.isOpen ? this.close() : this.open();\n    }\n    open() {\n        this.isOpen = true;\n        this.node.classList.add(\"lobster-select--open\");\n        if (this.searchInput) {\n            this.searchInput.focus();\n        }\n    }\n    close() {\n        this.isOpen = false;\n        this.node.classList.remove(\"lobster-select--open\");\n        if (this.searchInput) {\n            this.searchInput.value = \"\";\n            this.renderOptions();\n        }\n    }\n    handleOutsideClick(event) {\n        if (!this.node.contains(event.target)) {\n            this.close();\n        }\n    }\n    getValue() {\n        var _a;\n        return (_a = this.selectedOption) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    setValue(value) {\n        const option = this.options.find((opt) => opt.value === value);\n        if (option) {\n            this.selectOption(option);\n        }\n    }\n    clear(force = false) {\n        if (!this.config.clearable && !force) {\n            console.warn(\"Clearable is disabled\");\n            return;\n        }\n        this.selectedOption = undefined;\n        this.setButtonText();\n        this.node.classList.remove(\"has-value\");\n        const options = this.dropdown.querySelectorAll(\".lobster-select__option\");\n        options.forEach((option) => {\n            option.classList.remove(\"lobster-select__option--selected\");\n        });\n        if (this.shadowInput !== null) {\n            this.shadowInput.value = \"\";\n        }\n    }\n    updateOptions(options) {\n        this.options = options.map((option) => SelectOption.fromObject(option));\n        this.renderOptions();\n    }\n    disable() {\n        this.node.classList.add(\"lobster-select--disabled\");\n        this.selectButton.removeEventListener(\"click\", () => this.toggle());\n    }\n    enable() {\n        this.node.classList.remove(\"lobster-select--disabled\");\n        this.selectButton.addEventListener(\"click\", () => this.toggle());\n    }\n    destroy() {\n        this.node.innerHTML = \"\";\n        this.node.classList.remove(...this.node.classList);\n        if (this.shadowInput !== null) {\n            this.shadowInput.classList.remove(\"lobster-select__shadow-node\");\n        }\n        if (this.outsideClickHandler !== null) {\n            document.removeEventListener(\"click\", this.outsideClickHandler);\n        }\n    }\n    setButtonText(text = null) {\n        var _a;\n        if (this.buttonText === undefined) {\n            return;\n        }\n        this.buttonText.textContent = (_a = text !== null && text !== void 0 ? text : this.config.placeholder) !== null && _a !== void 0 ? _a : \"\";\n    }\n}\n"],
  "mappings": "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",
  "names": ["SelectOption", "_SelectOption", "value", "label", "disabled", "selected", "option", "_a", "_b", "SelectChangeEvent", "detail", "Select", "selector", "options", "config", "node", "SelectOption", "option", "target", "buttonArrow", "clearButton", "e", "event", "searchWrapper", "optionsList", "optionElement", "existingOptions", "searchTerm", "filteredOptions", "optionEl", "index", "isChosen", "_a", "value", "opt", "force", "text"]
}
